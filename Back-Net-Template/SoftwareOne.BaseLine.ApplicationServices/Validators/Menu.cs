//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
// <copyright company="SoftwareOne">Copyright(c) 2023 All Rights Reserved.</copyright>
// <author>Jessica Antía Hortúa</author>
// <email>mailto:jessica.antia@softwareone.com</email>
// <summary>Validator implementation for the Entity (Menu)</summary>
using FluentValidation;
using SoftwareOne.BaseLine.ApplicationTexts;
using SoftwareOne.BaseLine.Core.Validator;

namespace Base.Application.Validators
{
    public class Menu : SwoValidator<SoftwareOne.BaseLine.Entities.Menu>
    {
        /// <summary>
        /// Constant that contains max length for the fields generic.
        /// </summary>
        private const int GENERIC_MAX_LENGTH = 500;

        /// <summary>
        /// Initializes a new instance of the <see cref="Menu"/> class.
        /// </summary>
        public Menu()
        {
            // Path lenght validation
            RuleFor(entity => entity.Path)
                .Length(0, GENERIC_MAX_LENGTH).WithMessage(ResourceValidations.InvalidLength);
            // Title lenght validation
            RuleFor(entity => entity.Title)
                .Length(0, GENERIC_MAX_LENGTH).WithMessage(ResourceValidations.InvalidLength);
            // Icon lenght validation
            RuleFor(entity => entity.Icon)
                .Length(0, GENERIC_MAX_LENGTH).WithMessage(ResourceValidations.InvalidLength);
            // Class lenght validation
            RuleFor(entity => entity.Class)
                .Length(0, GENERIC_MAX_LENGTH).WithMessage(ResourceValidations.InvalidLength);
            // Badge lenght validation
            RuleFor(entity => entity.Badge)
                .Length(0, GENERIC_MAX_LENGTH).WithMessage(ResourceValidations.InvalidLength);
            // BadgeClass lenght validation
            RuleFor(entity => entity.BadgeClass)
                .Length(0, GENERIC_MAX_LENGTH).WithMessage(ResourceValidations.InvalidLength);
        }
    }
}